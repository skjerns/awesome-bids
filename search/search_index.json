{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Awesome BIDS","text":"<p>A curated list of awesome projects, proposals, apps and resources related to the Brain Imaging Data Structure.</p>"},{"location":"index.html#documentation","title":"Documentation","text":"<p>Documentation related to BIDS.</p> <ul> <li>The central BIDS website to get general information about BIDS.</li> <li>The BIDS Starter Kit   is the best place to get started with BIDS.</li> <li>The official BIDS Specification to get into the details.</li> <li>The BIDS youtube channel   where we try to curate playlists of BIDS related videos.</li> <li>Slides of many BIDS related presentations are available on the Open Science Framework.</li> <li>The FieldTrip websites contains   many BIDS  tips and  examples, mainly for MEG, EEG, fNIRS, etc.</li> <li>If you help to mention BIDS in one of your grant,   make sure that to check out the BIDS grant writing kit.</li> </ul>"},{"location":"index.html#community","title":"Community","text":"<ul> <li> <p>The Neurostars discourse forum   run by the International Neuroinformatics Coordinating Facility (INCF)   with its own BIDS category.   With a lot BIDS users and developers,   it is the best place where to ask BIDS related questions.</p> </li> <li> <p>BIDS mailing list:   a google group for announcements and discussions around BIDS.</p> </li> <li> <p>BIDS in the Brainhack mattersmost:   mattermost is the open source equivalent of slack   and the Brainhack instance has over 5000 members   with its own channel dedicated BIDS channel.</p> </li> </ul>"},{"location":"index.html#social-media","title":"Social media","text":"<p>Here are the official BIDS account on several social media.</p> <ul> <li>Twitter / X</li> <li>Mastodon</li> <li>Bluesky</li> <li>YouTube</li> <li>Our podcast on anchor</li> </ul>"},{"location":"index.html#datasets","title":"Datasets","text":"<ul> <li>The BIDS examples repository hosts dataset of each modality   with empty raw data files. These datasets can be useful to:</li> <li>serve as an example on how a BIDS dataset can be structured</li> <li>write lightweight software tests</li> <li>OpenNeuro host more than 1000 open BIDS datasets of all datatypes.</li> </ul>"},{"location":"index.html#converters","title":"Converters","text":"<p>Tools for converting data to/from BIDS from other standard or custom formats and layouts.</p>"},{"location":"index.html#mri","title":"MRI","text":"<ul> <li>Autobids: Automated Dicom to BIDS and pipelines using compute canada. From the Center for Functional and Metabolic Mapping (CFMM) at Western\u2019s Robarts Research Institute.   </li> <li> BIDScoin: BIDScoin is a flexible tool to convert (\u201ccoin\u201d) source-level (raw) neuroimaging data sets to BIDS without needing to code anything. It features automatic data discovery based on header as well as filesystem information, and comes with a user-friendly GUI to add missing information and tweak the results. BIDScoin supports multiple source data formats with plugins (e.g. employing dcm2niix, spec2nii or nibabel) and allows customization of the prior knowledge about your data (allowing for fully automatic CLI data conversion if you like).   </li> <li> BIDSconvertR: The BIDSconvertR R package provides a user-friendly workflow with graphical user interfaces. It consists of the following steps: (i) convert DICOM data to NIfTI data using dcm2niix (ii) structure this data according to the BIDS specification (iii) provide the papayaWidget viewer for inspecting the images   </li> <li> bidsify: Tool to convert source MRI datasets to BIDS-compatible datasets.   </li> <li> bidskit: Utility functions for working with DICOM and BIDS neuroimaging data.   </li> <li> BIDSme:   </li> <li> BMAT:   </li> <li> BrkRaw: For a preclinical Bruker MRI scanner   </li> <li> Clinica:   </li> <li> dac2bids: Create a BIDS structure for a DICOM folder.   </li> <li> Data2Bids: Converts MRI files from extension supported by nibabel into NIfTI and convert them to BIDS   </li> <li> Dcm2Bids: converts DICOM files using dcm2niix into BIDS   </li> <li> Explore ASL: Convert DICOM and NIFTI data to the ASL-BIDS format.   </li> <li> ezBIDS: A web-based BIDS conversion tool with four unique features: (1) No installation or programming requirements. (2) Handling of both imaging and task events data and metadata. (3) Semi-automated inference and guidance for adherence to BIDS. (4) Multiple data management options, including download BIDS data to local system, or transfer to OpenNeuro.org or to brainlife.io.   </li> <li> HeuDiConv: A flexible DICOM converter for organizing brain imaging data into structured directory layouts   </li> <li>Horos (Osirix) export plugin: Horos plugin for BIDS output.   </li> <li> mercure-dcm2bids: A containerized app that can be used to perform BIDS conversion of DICOM studies sent directly to mercure from a scanner or PACS. mercure is an open-source DICOM orchestration platform that can integrate containerized apps into clinical workflows. It has a graphical user interface making it easy to setup and manage BIDS configurations for multiple protocols. The Dcm2Bids tool is used for conversion.   </li> <li> niix2bids: Use this package as a command line to organize your Nifti dataset into BIDS.   </li> <li>OpenfMRI2BIDS: Convert OpenfMRI dataset to BIDS   </li> <li> PET2BIDS: Helps you convert your PET data! raw PET scanner files (for example ecat, dicom) and additional side file like excel sheets.   </li> <li> ReproIn: HeuDiConv-based turnkey solution: a setup for automatic generation of shareable, version-controlled BIDS datasets from MR scanners.   </li> <li> SAMRI: Full stack Small Animal MRI data analysis package, including the <code>bru2bids</code> repositing pipeline, which can convert Bruker archives to the BIDS format. From the ETH and University of Zurich, with collaboration from MIT and Dartmouth College.   </li> <li>XNAT2BIDS: Simple xnat pipeline to convert DICOM scans to BIDS-compatible output (nii+json).   </li> </ul>"},{"location":"index.html#meeg","title":"MEEG","text":"<ul> <li> BIDSme:   </li> <li> Biscuit: GUI for easy MEG to BIDS conversion   </li> <li> EEG2BIDS: A tool for converting raw EEG and iEEG data into the BIDS standard data structure, prepared for LORIS (Longitudinal Online Research and Imaging System).   </li> <li> EEGLAB: See plugins </li> <li> FieldTrip - data2bids:   </li> <li> MNE-BIDS: MNE-BIDS is a Python package that allows you to read and write BIDS-compatible datasets with the help of MNE-Python.   </li> <li> sovabids: A Python package for the automatic conversion of EEG datasets to the BIDS standard, with a focus on making the most out of metadata.   </li> </ul>"},{"location":"index.html#physiological","title":"physiological","text":"<ul> <li> bidsphysio: Converts physio data to BIDS physiological recording   </li> <li> phys2bids: Python3 library to format physiological files in BIDS.   </li> </ul>"},{"location":"index.html#others","title":"others","text":"<ul> <li> convert-eprime: Python functions to convert E-Prime files to CSVs. Not currently being developed.   </li> <li>DCM2NIIx: dcm2nii DICOM to NIfTI converter   </li> <li> DICM2NII: dcm2nii DICOM to NIfTI converter   </li> <li> sim2bids: GUI to easily convert simulation results to BIDS format, according to  BEP 34 .   </li> </ul>"},{"location":"index.html#validation","title":"Validation","text":"<p>Make sure you use to validate any BIDS dataset you are working with.</p> <p>You can use it in a browser or install the package and use it as a command line tool.</p>"},{"location":"index.html#bids-apps","title":"BIDS Apps","text":"<p>BIDS apps are containerized tools to automatically process BIDS datasets. For more information check the BIDS Apps website.</p> <ul> <li>afni_proc: prototype AFNI bids app implementing participant level preprocessing with afni_proc.py   </li> <li>antsCorticalThickness: BIDS App for calculating cortical thickness using ANTs   </li> <li>baracus: Predicts brain age, based on data from Freesurfer 5.3   </li> <li>brainiak-srm: This is the BIDS-app version of the Shared Response Model (SRM) of BrainIAK   </li> <li>BrainSuite: BrainSuite's structural, diffusion, and functional MRI processing pipelines with QC functionalities.   </li> <li>BROCCOLI: BIDS App for BROCCOLI   </li> <li>CPAC: BIDS Application for the Configurable Pipeline for the Analysis of Connectomes (C-PAC)   </li> <li>DPARSF: Docker version of DPARSF, also deployed at OpenNeuro.org   </li> <li>freesurfer: BIDS app wrapping recon-all from FreeSurfer   </li> <li>giga_connectome: This is a BIDS-App to extract signal from a parcellation with nilearn, typically useful in a context of resting-state data processing.   </li> <li>HCPPipelines: A BIDS App for minimal preprocessing using the HCP Pipelines   </li> <li>hyperalignment: Hyperalignment is a functional alignment method that aligns subjects' brain data in a high-dimensional space of voxels/features.   </li> <li>mindboggle: Improve the accuracy, precision, and consistency of automated labeling and shape analysis of human brain image data   </li> <li>MRtrix3_connectome: Generate subject connectomes from raw BIDS data &amp; perform inter-subject connection density normalisation, using  the MRtrix3 software package.   </li> <li>ndmg: BIDS app for NeuroData's MRI to Graphs pipeline   </li> <li>nipypelines: Preprocess functional tasks in a BIDS dataset.   </li> <li>oppni: runs fast optimization of preprocessing pipelines for BOLD fMRI   </li> <li>PyMVPA: runs MVPA and RSA analysis BIDS bold derivative data   </li> <li>QAP: PCP Quality Assessment Protocol   </li> <li>rsHRF: Resting state HRF estimation from BOLD-fMRI signal   </li> <li>SPM: BIDS App containing an instance of the SPM software.   </li> <li>tracula: implements Freesurfer's TRACULA (TRActs Constrained by UnderLying Anatomy) tool for cross-sectional as well as longitudinal (multi session) input data.   </li> <li>connectomemapper3: Connectome Mapper 3 is a BIDS App that implements full anatomical, diffusion, resting/state functional MRI, and recently EEG processing pipelines, from raw T1 / DWI / BOLD , and preprocessed EEG data to multi-resolution brain parcellation with corresponding connection matrices.   </li> <li>bidsMReye: BIDS app using deepMReye to decode eye motion for fMRI time series data.   </li> <li>bidspm: an SPM centric BIDS app   </li> <li>fmriprep-fake: None   </li> <li>funcmasker-flex: BIDS App for U-net brain masking of fetal bold MRI   </li> <li>hippunfold: BIDS App for Hippunfold (automated hippocampal unfolding and subfield segmentation)   </li> <li>mialsuperresolutiontoolkit: The Medical Image Analysis Laboratory Super-Resolution ToolKit (MIALSRTK) consists of a set of C++ and Python processing and workflow tools necessary to perform motion-robust super-resolution fetal MRI reconstruction in the BIDS Apps framework.   </li> <li>micapipe: micapipe from the Multimodal imaging and connectome analysis lab (https://mica-mni.github.io) at the Montreal Neurological Institute. Read The Docs documentation below   </li> <li>dmriprep: dMRIPrep is a robust and easy-to-use pipeline for preprocessing of diverse dMRI data. The transparent workflow dispenses of manual intervention, thereby ensuring the reproducibility of the results.   </li> <li>fmriprep: fMRIPrep is a robust and easy-to-use pipeline for preprocessing of diverse fMRI data. The transparent workflow dispenses of manual intervention, thereby ensuring the reproducibility of the results.   </li> <li>mriqc: Automated Quality Control and visual reports for Quality Assessment of structural (T1w, T2w) and functional MRI of the brain   </li> <li>nibabies: Processing tools for magnetic resonance images of infant brains   </li> <li>nirodents: None   </li> <li>smriprep: Structural MRI PREProcessing (sMRIPrep) workflows for NIPreps (NeuroImaging PREProcessing tools)   </li> <li>BIDSonym: a BIDS app for pseudo-anonymization of neuroimaging data   </li> <li>aslprep: Preprocessing of arterial spin labeling data   </li> <li>qsiprep: Preprocessing and reconstruction of diffusion MRI   </li> <li>xcp_d: Post-processing of fMRIPrep, nibabies, HCP, and DCAN BOLD derivatives for functional connectivity analysis   </li> <li>fitlins: Fit Linear Models to BIDS Datasets   </li> <li>multiscalebrainparcellator: Multi-Scale Brain Parcellator, part of the Connectome Mapping Toolkit (CMTK), is a BIDS App that implements a full anatomical MRI processing pipeline, from raw T1w data to structural brain parcellation at five different scales.   </li> <li>gift-bids: None   </li> </ul>"},{"location":"index.html#tools","title":"Tools","text":"<p>Software packages for working with BIDS datasets.</p> <ul> <li> babs: BIDS App Bootstrap (BABS) is a reproducible, generalizable, and scalable Python package for BIDS App analysis of large datasets. It uses DataLad and adopts FAIRly big framework.    </li> <li> bids stats model: Validate BIDS statistical model. To learn more the BIDS stats model website </li> <li> bids-cfood: a module to handle BIDS dataset for the caosDB data crawler</li> <li> bids-matlab: MATLAB/Octave tools to interact with datasets conforming to the BIDS format   </li> <li> BIDS-pydantic: Pulls a specified version of the BIDS schema and creates corresponding Pydantic models, which will provide BIDS data validation using Python type annotations. See also BIDS-pydantic-models.    </li> <li> bids2cite: package to interactively update <code>dataset_description.json</code> and generate citation files (for example <code>datacite.yml</code>) for BIDS datasets.   </li> <li> bidser: Working with Brain Imaging Data Structure in R   </li> <li> BIDSHandler: Python module allowing complete manipulation of BIDS data   </li> <li> Brainstorm: MEG/EEG analysis package</li> <li> clpipe: streamlined processing pipeline for MRI data centered around BIDS   </li> <li> cuBIDS: a Python package designed to facilitate reproducible curation of neuroimaging BIDS datasets    </li> <li> File mapper: An easy tool to copy/move/symlink files from one directory to the other! Can be used to \"convert\" dataset to be BIDS compliant.   </li> <li> GUI dataset description generator: GUI form that generates <code>dataset_description.json</code> </li> <li>Hierarchical Event Descriptors (HED) online tools: Online tools for annotation, validation, summary, and assembly of event file contents and annotations.</li> <li> Hierarchical Event Descriptors (HED) Python tools: HED libraries supporting schema development as well as annotation, validation, and analysis.    </li> <li> Lead-DBS: A toolbox facilitating Deep Brain Stimulation electrode reconstructions  and computer simulations supports BIDS conversion and ingestion of BIDS datasets.</li> <li> mne-bids: collection of tools for converting magnetoencephalography (MEG) data into BIDS format, as well as some helper functions for creating the folders and metadata needed for a BIDS dataset.   </li> <li>neurobagel annotate: This tool allows you to create a machine readable data dictionary in .json format for a tabular phenotypic file in .tsv format (\"Data table\").</li> <li>neurobagel query: Neurobagel's query tool is a web interface for searching across a BIDS datasets based on various subject clinical-demographic and imaging parameters.</li> <li> nipopy: Lightweight neuroimaging workflow manager to help with DICOM to BIDS conversion and running BIDS apps.   </li> <li>PRFmodel: a set of tools to fit population receptive field models to BIDS datasets   </li> <li> psychopy-bids: A psychopy plugin to help easily output a BIDS dataset, including <code>events.tsv</code> and <code>beh.tsv</code> files when running experiments with psychopy.</li> <li> PyBIDS: Python package to quickly parse / search the components of a BIDS dataset. It also contains functionality for running analyses on your data.    </li> <li> rbids: aims to make BIDS datasets more easily accessible for packages written in R   </li> <li> spm_2_bids: a tool convert SPM preprocessed output to BIDS derivatives (trying to follow BEP12)   </li> </ul>"},{"location":"index.html#code","title":"Code","text":"<p>Most of the repositories for BIDS are centralized in:</p> <ul> <li>the BIDS standard github organization</li> <li>the BIDS-app github organization</li> </ul> <p>Make sure to also check repositories tagged for the following topics:</p> <ul> <li> <p>on GitHub:</p> </li> <li> <p>BIDS</p> </li> <li>BIDS-Apps</li> <li> <p>bids-format</p> </li> <li> <p>on GitLab:</p> </li> <li> <p>BIDS</p> </li> </ul>"},{"location":"index.html#bids-extension-proposals-bep","title":"BIDS Extension Proposals (BEP)","text":"<p>Ongoing community proposals for extending the BIDS specification to new datatypes (raw), to specify how to organized processed data (derivatives), or interoperating with BIDS datasets.</p> <p>Make sure to check the list to see if some people are not already working on making sure BIDS supports your favorite datatype.</p> <p>If you are working on an extension proposal make sure to check our documentation regarding the BIDS extension proposal process.</p>"},{"location":"index.html#raw","title":"raw","text":"<ul> <li>BEP004: Susceptibility Weighted Imaging</li> <li>BEP020: Eye Tracking including Gaze Position and Pupil Size</li> <li>BEP022: Magnetic Resonance Spectroscopy</li> <li>BEP024: Computed Tomography scan</li> <li>BEP026: Microelectrode Recordings</li> <li>BEP032: Animal electrophysiology</li> <li>BEP033: Advanced Diffusion Weighted Imaging</li> <li>BEP036: Phenotypic Data Guidelines</li> <li>BEP037: Non-Invasive Brain Stimulation</li> <li>BEP038: Atlases</li> <li>BEP039: Dimensionality reduction-based networks</li> <li>BEP040: Functional Ultrasound</li> <li>BEP042: Electromyography</li> </ul>"},{"location":"index.html#derivative","title":"derivative","text":"<ul> <li>BEP011: Structural preprocessing derivatives</li> <li>BEP012: Functional preprocessing derivatives</li> <li>BEP014: Affine transformations and nonlinear field warps</li> <li>BEP016: Diffusion weighted imaging derivatives</li> <li>BEP017: Generic BIDS connectivity data schema</li> <li>BEP021: Common Electrophysiological Derivatives</li> <li>BEP023: PET Preprocessing derivatives</li> <li>BEP034: Computational modeling</li> <li>BEP035: Modular extensions for individual participant data mega-analyses with non-compliant derivatives</li> <li>BEP041: Statistical Model Derivatives</li> </ul>"},{"location":"index.html#publications","title":"Publications","text":"<p>BIDS references are centralized in our zotero group.</p>"},{"location":"index.html#contribute","title":"Contribute","text":"<p>Contributions welcome! Read the contribution guidelines first.</p>"},{"location":"code-of-conduct.html","title":"Contributor Covenant Code of Conduct","text":""},{"location":"code-of-conduct.html#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"code-of-conduct.html#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"code-of-conduct.html#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"code-of-conduct.html#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"code-of-conduct.html#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at bids.maintenance@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"code-of-conduct.html#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at http://contributor-covenant.org/version/1/4</p>"},{"location":"contributing.html","title":"Contribution Guidelines","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.</p> <p>Ensure your pull request adheres to the following guidelines:</p> <ul> <li>Make sure you take care of this</li> <li>And this as well</li> <li>And don't forget to check this</li> </ul> <p>Thank you for your suggestions!</p>"},{"location":"contributing.html#updating-your-pr","title":"Updating your PR","text":"<p>A lot of times, making a PR adhere to the standards above can be difficult. If the maintainers notice anything that we'd like changed, we'll ask you to edit your PR before we merge it. There's no need to open a new PR, just edit the existing one. If you're not sure how to do that, here is a guide on the different ways you can update your PR so that we can merge it.</p>"}]}